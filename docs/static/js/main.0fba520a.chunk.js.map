{"version":3,"sources":["reducers/userSlice.js","components/navbar.js","components/create.js","components/edit.js","components/courseList.js","reducers/courseSlice.js","components/wrappedLink.js","components/home.js","components/errorMsg.js","components/inputField.js","components/signUp.js","components/login.js","components/addCourse.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["userSlice","createSlice","name","initialState","isAuthenticate","userId","authorizationToken","localStorage","getItem","jwt","decode","err","validCredentials","uid","email","reducers","userLogin","state","action","token","id","isAuthenticated","userLogout","setItem","actions","NavigationBar","userLinks","className","this","props","authenticatedUsername","Button","variant","onClick","guestLinks","href","Navbar","bg","expand","Brand","Toggle","Collapse","Component","connect","user","dispatch","Create","onChangecourseName","bind","onChangecoursePosition","onChangecourseLevel","onSubmit","course_name","course_position","course_level","e","setState","target","value","preventDefault","newcourse","axios","post","then","res","console","log","data","type","onChange","checked","Course","record","person_name","person_position","person_level","to","_id","deleteCourse","CourseList","records","get","response","catch","error","delete","filter","el","map","currentrecord","style","marginTop","recordList","API_URI","options","headers","method","body","JSON","stringify","allCourses","myCourses","thisCourse","getAllCourses","payload","courses","getThisCourse","fetch","json","getMyCourses","WrappedLink","buttonClasses","join","children","Home","toggleShowMyCourses","prevState","showMyCourses","errorMsg","location","pathname","initCourses","parse","players","course","ind","player","YouTubePlayer","width","height","captions","load","courseLink","push","link","on","Accordion","Card","as","Header","eventKey","courseName","Body","myCourse_players","showCoursesLink","display","a","Array","isArray","withRouter","ErrorMsg","msg","InputField","OnErrorClass","label","defaultValue","placeholder","errors","validateEmail","test","FIELDS","Signup","userDetails","commonValidation","field","length","confirmPassword","password","handleInputChange","commonValidationError","handleSignup","Object","keys","userSignupRequest","removeItem","history","inputFields","Login","handleValidation","invalidCredentials","userCredentials","handleLogin","userLoginDetails","userLoginCreds","disabled","AddCourse","handleNewCourseSubmit","addNewCourse","author","title","CourseData","configureStore","reducer","courseSlice","App","store","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fba520a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport jwt from 'jsonwebtoken'\nconst API_URI = \"http://localhost:8080\"\nconst options = data => {\n    return {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: 'post',\n        body: JSON.stringify(data)\n    };\n};\n\nconst validCredentials = () => {\n    const authorizationToken = localStorage.getItem('jwtToken')\n    if (authorizationToken === null)\n        return false\n    try {\n        if (jwt.decode(authorizationToken)) return true\n        else return false\n    } catch(err) {\n        return false\n    }\n}\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        isAuthenticate: false,\n        userId: validCredentials() === false ? '' : jwt.decode(localStorage.getItem('jwtToken')).uid,\n        email: 'not logged in'\n    },\n    reducers: {\n        userLogin: (state, action) => {\n            const token = localStorage.getItem('jwtToken')\n            state.userId = jwt.decode(token).id\n            state.email = jwt.decode(token).email\n            state.isAuthenticated = true\n            \n            \n        },\n        userLogout: (state, action) => {\n            state.isAuthenticated = false\n            state.userId = \"No Auth\"\n            state.email = \"Not logged in\"\n            localStorage.setItem('jwtToken', '')\n        }\n    }\n})\n\nexport const {userLogin, userLogout} = userSlice.actions\nexport const userLoginThunk = userLoginCreds => async dispatch => {\n    let res = await fetch(`${API_URI}/user/login`, options(userLoginCreds))\n    res = await res.json()\n    \n    if (res.token) {\n        const token = res.token\n        delete res.token\n        localStorage.setItem('jwtToken', token)\n        \n        dispatch(userLogin())\n        return \"AUTH_OK\"\n    }\n    return \"AUTH_ERR\"\n}\nexport default userSlice.reducer","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { connect } from 'react-redux';\nimport { userLogout } from '../reducers/userSlice';\nimport Button from 'react-bootstrap/Button'\nclass NavigationBar extends Component {\n    render() {\n        const userLinks = (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item me-2 mt-2\">\n                    Hello, {this.props.authenticatedUsername}\n                </li>\n                <li className=\"nav-item me-2 ml-2\">\n                    <Button variant = \"primary\" onClick = {this.props.userLogout} >Logout</Button>\n                </li>\n            </ul>\n        );\n        const guestLinks = (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item m-1\">\n                    <Button href = \"/login\" variant = \"primary\">Login</Button>\n                </li>\n                <li className=\"nav-item m-1\">\n                    <Button href = \"/signup\" variant = \"primary\">Sign up</Button>\n                </li>\n            </ul>\n        );\n\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/\" className=\"ms-3\">Youtube Courses</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n\n                    {this.props.isAuthenticated ? userLinks : guestLinks}\n                </Navbar.Collapse>\n            </Navbar>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.user.isAuthenticated,\n        authenticatedUsername: state.user.email\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        userLogout: () => dispatch(userLogout())\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);\n","import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\n\nexport default class Create extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n\n    this.onChangecourseName = this.onChangecourseName.bind(this);\n    this.onChangecoursePosition = this.onChangecoursePosition.bind(this);\n    this.onChangecourseLevel = this.onChangecourseLevel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      course_name: \"\",\n      course_position: \"\",\n      course_level: \"\",\n    };\n  }\n\n  // These methods will update the state properties.\n  onChangecourseName(e) {\n    this.setState({\n      course_name: e.target.value,\n    });\n  }\n\n  onChangecoursePosition(e) {\n    this.setState({\n      course_position: e.target.value,\n    });\n  }\n\n  onChangecourseLevel(e) {\n    this.setState({\n      course_level: e.target.value,\n    });\n  }\n\n// This function will handle the submission.\n  onSubmit(e) {\n    e.preventDefault();\n\n    // When post request is sent to the create url, axios will add a new record(newcourse) to the database.\n    const newcourse = {\n      course_name: this.state.course_name,\n      course_position: this.state.course_position,\n      course_level: this.state.course_level,\n    };\n\n    axios\n      .post(\"http://localhost:3000/record/add\", newcourse)\n      .then((res) => console.log(res.data));\n\n    // We will empty the state after posting the data to the database\n    this.setState({\n      course_name: \"\",\n      course_position: \"\",\n      course_level: \"\",\n    });\n  }\n\n  // This following section will display the form that takes the input from the user.\n  render() {\n    return (\n      <div className=\"m-3\">\n        <h3>Create New Course</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Name of the course: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.course_name}\n              onChange={this.onChangecourseName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>course's position: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.course_position}\n              onChange={this.onChangecoursePosition}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityLow\"\n                value=\"Intern\"\n                checked={this.state.course_level === \"Intern\"}\n                onChange={this.onChangecourseLevel}\n              />\n              <label className=\"form-check-label\">Intern</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityMedium\"\n                value=\"Junior\"\n                checked={this.state.course_level === \"Junior\"}\n                onChange={this.onChangecourseLevel}\n              />\n              <label className=\"form-check-label\">Junior</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityHigh\"\n                value=\"Senior\"\n                checked={this.state.course_level === \"Senior\"}\n                onChange={this.onChangecourseLevel}\n              />\n              <label className=\"form-check-label\">Senior</label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create course\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component }  from \"react\";\n// This will require to npm install axios\nimport axios from \"axios\";\n\nexport default class Edit extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n\n    this.onChangePersonName = this.onChangePersonName.bind(this);\n    this.onChangePersonPosition = this.onChangePersonPosition.bind(this);\n    this.onChangePersonLevel = this.onChangePersonLevel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      person_name: \"\",\n      person_position: \"\",\n      person_level: \"\",\n      records: [],\n    };\n  }\n  // This will get the record based on the id from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:3000/record/\" + this.props.match.params.id)\n      .then((response) => {\n        this.setState({\n          person_name: response.data.person_name,\n          person_position: response.data.person_position,\n          person_level: response.data.person_level,\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // These methods will update the state properties.\n  onChangePersonName(e) {\n    this.setState({\n      person_name: e.target.value,\n    });\n  }\n\n  onChangePersonPosition(e) {\n    this.setState({\n      person_position: e.target.value,\n    });\n  }\n\n  onChangePersonLevel(e) {\n    this.setState({\n      person_level: e.target.value,\n    });\n  }\n\n  // This function will handle the submission.\n  onSubmit(e) {\n    e.preventDefault();\n    const newEditedperson = {\n      person_name: this.state.person_name,\n      person_position: this.state.person_position,\n      person_level: this.state.person_level,\n    };\n    console.log(newEditedperson);\n\n    // This will send a post request to update the data in the database.\n    axios\n      .post(\n        \"http://localhost:3000/update/\" + this.props.match.params.id,\n        newEditedperson\n      )\n      .then((res) => console.log(res.data));\n\n    this.props.history.push(\"/\");\n  }\n\n  // This following section will display the update-form that takes the input from the user to update the data.\n  render() {\n    return (\n      <div>\n        <h3 align=\"center\">Update Record</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Person's Name: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.person_name}\n              onChange={this.onChangePersonName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Position: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.person_position}\n              onChange={this.onChangePersonPosition}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityLow\"\n                value=\"Intern\"\n                checked={this.state.person_level === \"Intern\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Intern</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityMedium\"\n                value=\"Junior\"\n                checked={this.state.person_level === \"Junior\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Junior</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityHigh\"\n                value=\"Senior\"\n                checked={this.state.person_level === \"Senior\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Senior</label>\n            </div>\n          </div>\n          <br />\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Update Record\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nconst Course = (props) => (\n  <tr className=\"p-2\">\n    <td>{props.record.person_name}</td>\n    <td>{props.record.person_position}</td>\n    <td>{props.record.person_level}</td>\n    <td>\n      <Link to={\"/edit/\" + props.record._id}>Edit</Link> |\n      <a\n        href=\"/\"\n        onClick={() => {\n          props.deleteCourse(props.record._id);\n        }}\n      >\n        Delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class CourseList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteCourse = this.deleteCourse.bind(this);\n    this.state = { records: [] };\n  }\n\n  // This method will get the data from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:3000/record/\")\n      .then((response) => {\n        this.setState({ records: response.data });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // This method will delete a record based on the method\n  deleteCourse(id) {\n    axios.delete(\"http://localhost:3000/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      record: this.state.records.filter((el) => el._id !== id),\n    });\n  }\n\n  // This method will map out the users on the table\n  recordList() {\n    return this.state.records.map((currentrecord) => {\n      return (\n        <Course\n          record={currentrecord}\n          deleteCourse={this.deleteCourse}\n          key={currentrecord._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  render() {\n    return (\n      <div className=\"m-3\">\n        <h3>Course List</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Position</th>\n              <th>Level</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{this.recordList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport jwt from 'jsonwebtoken'\nconst API_URI = \"http://localhost:8080\"\nconst options = data => {\n    return {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('jwtToken')\n        },\n        method: 'post',\n        body: JSON.stringify(data)\n    };\n};\n\nconst validCredentials = () => {\n    const authorizationToken = localStorage.getItem('jwtToken')\n    if (authorizationToken === null)\n        return false\n    try {\n        jwt.decode(authorizationToken)\n        return true\n    } catch(err) {\n        return false\n    }\n}\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        allCourses: [],\n        myCourses: [],\n        thisCourse: null,\n    },\n    reducers: {\n        getAllCourses: (state, action) => {\n            state.allCourses = action.payload.courses\n        },\n        getThisCourse: (state) => {\n            fetch('/api/courses')\n            .then(res => res.json())\n            .then(res => {\n                state.thisCourse = res.data\n            })\n        }, \n        getMyCourses: (state, action) => {\n            state.myCourses = action.payload.courses\n        }\n    }\n})\n\nexport const {getAllCourses, getThisCourse, getMyCourses} = userSlice.actions\nexport const getAllCoursesThunk = () => async dispatch => {\n    let res = await fetch(`${API_URI}/course/getCourses`, options({}))\n    res = await res.json()\n    \n    if (Array.isArray(res)) {\n        dispatch(getAllCourses({\n                courses: res\n            })\n        )\n        return \"OK\"\n    }\n    return res\n}\nexport const getMyCoursesThunk = () => async dispatch => {\n    let res = await fetch(`${API_URI}/course/getCourses`, options({}))\n    res = await res.json()\n    \n    if (Array.isArray(res)) {\n        dispatch(getMyCourses({\n                courses: res\n            })\n        )\n        return \"OK\"\n    }\n    return res\n}\n\nexport default userSlice.reducer","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst WrappedLink = (props) => {\n    return (\n        <Link to={props.to} className=\"WrappedLink\">\n            <button\n                className={[...props.buttonClasses, \"WrappedButton\"].join(' ')}\n                onClick={props.onClick}>\n                {props.children}</button>\n        </Link>\n    );\n}\n\nexport default WrappedLink;","import React, { Component } from 'react';\nimport YouTubePlayer from 'yt-player';\nimport { connect } from 'react-redux';\nimport { getThisCourse, getAllCourses, getMyCourses, getAllCoursesThunk, getMyCoursesThunk } from '../reducers/courseSlice';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card'\nimport WrappedLink from './wrappedLink';\nimport { withRouter } from 'react-router-dom';\n\n\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            errorMsg: '',\n            showMyCourses: false,\n        }\n    }\n\n    componentWillMount() {\n        if (this.props.location.pathname === '/Course/myCourses' && !this.state.showMyCourses) {\n            this.toggleShowMyCourses();\n        }\n    }\n\n    componentDidMount() {\n        this.props.initCourses()\n            .then(res => {\n                if (res !== \"OK\") {\n                    this.setState({\n                        errorMsg: res,\n                    })\n                }\n            })\n\n        if (this.props.isAuthenticated) {\n            this.props.getMyCourses();\n        }\n    }\n\n    toggleShowMyCourses = () => {\n        this.setState((prevState) => {\n            return {\n                showMyCourses: !prevState.showMyCourses\n            }\n        });\n    }\n\n    render() {\n        let allCourses = this.props.allCourses || JSON.parse(localStorage.getItem('BasicMERNStackAppAllCourses'));\n        \n        let players = []\n        if (allCourses !== null) {\n            \n            allCourses = allCourses.map((course, ind) => {\n                try {\n\n                    const player = new YouTubePlayer(`#player-${ind}`, {\n                        width: 560,\n                        height: 315,\n                        captions: 'en'\n                    })\n\n                    player.load(course.courseLink)\n                    players.push({ link: course.courseLink, player: player })\n                    player.on('paused', () => {\n\n                    })\n                }\n                catch (err) {\n\n                }\n                return (\n                    <div key={ind} className=\"player-div\">\n                        <Accordion >\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                    {course.courseName}\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"0\">\n                                    <Card.Body>\n                                        <div id={`player-${ind}`} />\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                    Notes\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"1\">\n                                    <Card.Body>\n                                        some sample notes\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </div>\n                )\n\n            });\n        }\n\n        let myCourses = [];\n        if (this.props.isAuthenticated && this.state.showMyCourses) {\n            if (this.props.myCourses) {\n                myCourses = [...this.props.myCourses];\n            } else {\n                myCourses = [...JSON.parse(localStorage.getItem('BasicMERNStackAppMyCourses'))]\n            }\n            let myCourse_players = []\n            if (myCourses !== null) {\n                \n                myCourses = myCourses.map((course, ind) => {\n                    try {\n\n                        const player = new YouTubePlayer(`#player-${ind}`, {\n                            width: 560,\n                            height: 315,\n                            captions: 'en'\n                        })\n\n                        player.load(course.courseLink)\n                        myCourse_players.push({ link: course.courseLink, player: player })\n                        player.on('paused', () => {\n\n                        })\n                    }\n                    catch (err) {\n\n                    }\n                    return (\n                        <div key={ind} className=\"player-div\">\n                            <Accordion >\n                                <Card>\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                        {course.courseName}\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <Card.Body>\n                                            <div id={`player-${ind}`} />\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                <Card>\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                        Notes\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"1\">\n                                        <Card.Body>\n                                            some sample notes\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                            </Accordion>\n                        </div>\n                    )\n\n                });\n            }\n\n            \n        }\n\n        const showCoursesLink = <WrappedLink\n            to={this.state.showMyCourses ? \"/\" : \"/Course/myCourses\"}\n            buttonClasses={['btn', 'btn-outline-info', 'me-3', 'MyCoursesButton']}\n            onClick={this.toggleShowMyCourses}>\n            {this.state.showMyCourses ? 'All Courses' : 'My Courses'}\n        </WrappedLink>\n\n        return (\n            <div className=\"container\">\n                <br />\n                <div className=\"Header\">\n                    <h1 style={{ display: 'inline-block' }}>All Courses</h1>\n                    <WrappedLink to=\"/courses/add\" buttonClasses={['btn', 'btn-primary', 'me-3', 'AddCourseButton']}>Add Course</WrappedLink>\n                    {this.props.isAuthenticated && showCoursesLink}\n                </div>\n                <br />\n                <div>\n                    <section className=\"jumbotron\">\n                        <div className=\"Courses\">\n                            {this.state.errorMsg}\n                            {this.state.showMyCourses ? myCourses : allCourses}\n                        </div>\n                    </section>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        allCourses: state.course.allCourses,\n        myCourses: state.course.myCourses,\n        isAuthenticated: state.user.isAuthenticated\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        initCourses: () => dispatch(getAllCoursesThunk()),\n        getMyCourses: () => dispatch(getMyCoursesThunk())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Home));\n","import React from 'react';\n\n\nconst ErrorMsg = (props) => {\n    return (\n        <small className=\"ErrorMsg\">{props.msg}</small>\n    );\n};\n\nexport default ErrorMsg;","\nimport React from 'react';\nimport ErrorMsg from './errorMsg';\n\n\nconst InputField = (props) => {\n    const OnErrorClass = ['form-control', 'InputError'].join(' ');\n    return (\n        <div className=\"form-group\">\n            <label>{props.label}</label>\n            <input type={props.type} name={props.name}\n                defaultValue={props.defaultValue} placeholder={props.placeholder || props.label}\n                className={props.errors[props.name] ? OnErrorClass : 'form-control'}\n                onChange={props.onChange} {...props} />\n            {props.errors[props.name] !== '' && <ErrorMsg msg={props.errors[props.name]} />}\n        </div>\n    );\n}\n\nexport default InputField;","\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport InputField from './inputField';\n\n// Check if E-mail is Valid or not\nconst validateEmail = (email) => {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst FIELDS = [\n    {name: 'name', type: 'text', label: 'Name'},\n    {name: 'username', type: 'text', label: 'Username'},\n    {name: 'email', type: 'email', label: 'E-mail Address'},\n    {name: 'password', type: 'password', label: 'Password'},\n    {name: 'confirmPassword', type: 'password', label: 'Confirm Password'}\n];\n\nclass Signup extends Component {\n    state = {\n        userDetails: {},\n        errors: {}\n    };\n\n    componentWillMount() {\n        if (localStorage.getItem('SignupPage') !== null ) {\n            const { userDetails, errors } = JSON.parse(localStorage.getItem('SignupPage'));\n            this.setState(prevState => {\n                return {\n                    ...prevState,\n                    userDetails: {...userDetails},\n                    errors: {...errors}\n                };\n            });\n        }\n    }\n\n    commonValidation = (field, value) => {\n        let error = {};\n        if (value === '') {\n            error[field] = 'This field is required';\n        } else {\n            if (field === 'email' && !validateEmail(value)) {\n                error[field] = 'Not a valid Email';\n            } else if (field === 'password' && value.length < 4) {\n                error[field] = 'Password too short';\n                if (this.state.errors['confirmPassword'] !== '' && value === this.state.userDetails.confirmPassword) {\n                    error['confirmPassword'] = '';\n                }\n            } else if (field === 'confirmPassword' && value !== this.state.userDetails.password) {\n                error[field] = 'Passwords do not match';\n            } else {\n                error[field] = '';\n            }\n        }\n        return error;\n    }\n\n\n    handleInputChange = async (e) => {\n        const field = e.target.name;\n        const value = e.target.value;\n        let errors = {...this.state.errors};\n\n        const commonValidationError = await this.commonValidation(field, value);\n        \n        if ((field === 'username' || field === 'email') && value !== '') {\n            errors = { ...errors, [field]: commonValidationError[field]};\n        } else {\n            errors = { ...errors, ...commonValidationError };\n        }\n\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                userDetails: {\n                    ...prevState.userDetails,\n                    [field]: value\n                },\n                errors: {...errors}\n            };\n        }, () => localStorage.setItem('SignupPage', JSON.stringify(this.state)));\n    }\n\n    handleSignup = (e) => {\n        e.preventDefault();\n        let errors = {...this.state.errors};\n        const userDetailsValid = Object.keys(errors).filter(field => errors[field] !== \"\").length === 0 ? true : false;\n        if (!userDetailsValid){\n            return;\n        }\n        else {\n            this.props.userSignupRequest(this.state.userDetails)\n            .then(res => res.json())\n            .then(res => {\n                if (res.errors) {\n                    errors = {...errors, ...res.errors};\n                    this.setState(prevState => {\n                        return {\n                            ...prevState,\n                            userDetails: {...prevState.userDetails},\n                            errors: {...errors}\n                        };\n                    });\n                } else {\n                    localStorage.removeItem('SignupPage');\n                    this.props.history.push('/login');\n                }\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        localStorage.removeItem('SignupPage');\n    }\n\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        }\n        const inputFields = FIELDS.map(field =>\n            <InputField key={field.name}\n                        type={field.type} name={field.name} label={field.label}\n                        defaultValue={this.state.userDetails[field.name]}\n                        errors={this.state.errors}\n                        onChange={this.handleInputChange} />\n        )\n        return (\n            <div className=\"container\">\n                <br />\n                <h3 className=\"text-center\">Join Our Community!</h3>\n                <div className=\"jumbotron\">\n                    <form onSubmit={this.handleSignup}>\n                        { inputFields }\n                        <button className=\"btn btn-primary\">Sign Up</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.user.isAuthenticated\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { userLogin, userLoginThunk } from '../reducers/userSlice';\n\nimport InputField from './inputField';\n\nconst FIELDS = [\n    {name: 'email', type: 'text', label: 'Email'},\n    {name: 'password', type: 'password', label: 'Password'}\n];\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userCredentials: {},\n            errors: {}\n        }\n    }\n\n    handleValidation = (field, value) => {\n        let error = {};\n        if (value === '') {\n            error[field] = 'This field is required';\n        } else {\n            error[field] = '';\n        }\n        return error;\n    }\n\n    handleInputChange = (e) => {\n        const field = e.target.name;\n        const value = e.target.value;\n\n        const errors = { ...this.state.errors, ...this.handleValidation(field, value) }\n        if (errors.invalidCredentials) {\n            delete errors.invalidCredentials;\n        }\n\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                userCredentials: {\n                    ...prevState.userCredentials,\n                    [field]: value\n                },\n                errors: {...errors}\n            };\n        });\n    }\n\n    handleLogin = async (e) => {\n        e.preventDefault();\n        let errors = {...this.state.errors};\n        const userCredentialsValid = Object.keys(errors).filter(field => errors[field] !== \"\").length === 0 ? true : false;\n        if ( !userCredentialsValid ) {\n            return;\n        } else {\n            const res = await this.props.userLogin(this.state.userCredentials)\n            if (res===\"AUTH_OK\"){\n                this.props.history.push('/');\n            }\n        }\n    }\n\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        }\n        const inputFields = FIELDS.map(field =>\n            <InputField key={field.name}\n                        type={field.type} name={field.name} label={field.label}\n                        errors={this.state.errors}\n                        onChange={this.handleInputChange} />\n        )\n        return (\n            <div className=\"container\">\n                <br />\n                <h3 className=\"text-center\">Login</h3>\n                <div className=\"jumbotron\">\n                    { this.state.errors.invalidCredentials && <p className=\"text-danger\">{this.state.errors.invalidCredentials}</p> }\n                    <form onSubmit={this.handleLogin}>\n                        { inputFields }\n                        <button className=\"btn btn-primary\">Login</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.user.isAuthenticated\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        userLogin: (userLoginDetails) => dispatch(userLoginThunk(userLoginDetails))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport ErrorMsg from './errorMsg';\nimport InputField from './inputField';\n\nconst addNewCourse = (CourseData) => {\n    return fetch('/api/Courses/add', options(CourseData))\n    .then(res => res.json())\n}\nconst options = data => {\n    return {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: 'post',\n        body: JSON.stringify(data)\n    };\n};\n\nconst FIELDS = [\n    {name: 'title', type: 'text', label: 'Title'},\n    {name: 'author', type: 'text', label: 'Author', disabled: 'disabled'}\n];\nclass AddCourse extends Component {\n    state = {\n        Course: {},\n        errors: {}\n    };\n\n    componentWillMount() {\n        if (localStorage.getItem('AddCoursePage') !== null ) {\n            const { Course, errors } = JSON.parse(localStorage.getItem('AddCoursePage'));\n            this.setState(prevState => {\n                return {\n                    ...prevState,\n                    Course: {...Course},\n                    errors: {...errors}\n                };\n            });\n        }\n    }\n\n    handleValidation = (field, value) => {\n        let error = {};\n        if (value === '') {\n            error[field] = 'This field is required';\n        } else {\n            error[field] = '';\n        }\n        return error;\n    }\n\n    handleInputChange = (e) => {\n        const field = e.target.name;\n        const value = e.target.value;\n\n        const errors = { ...this.state.errors, ...this.handleValidation(field, value) }\n\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                Course: {\n                    ...prevState.Course,\n                    [field]: value\n                },\n                errors: {...errors}\n            };\n        }, () => localStorage.setItem('AddCoursePage', JSON.stringify(this.state)));\n    }\n\n    componentWillUnmount() {\n        localStorage.removeItem('AddCoursePage');\n    }\n\n    handleNewCourseSubmit = (e) => {\n        e.preventDefault();\n        let errors = {...this.state.errors};\n        const formValuesValid = Object.keys(errors).filter(field => errors[field] !== \"\").length === 0 ? true : false;\n        if ( !formValuesValid ) {\n            return;\n        } else {\n            this.props.addNewCourse({...this.state.Course, author: this.props.authenticatedUsername})\n            .then(res => {\n                if (res.errors) {\n                    this.setState(prevState => {\n                        return {\n                            ...prevState,\n                            Course: {...prevState.Course},\n                            errors: {...prevState.errors, ...res.errors}\n                        };\n                    });\n                } else {\n                    this.props.history.push('/');\n                }\n            })\n        }\n    }\n\n    render() {\n        if (!this.props.isAuthenticated) {\n            return <Redirect to=\"/login\" />;\n        }\n        return (\n            <div className=\"container\">\n                <br />\n                <h3 className=\"text-center\">Add Course</h3>\n                <div className=\"jumbotron\">\n                    <form onSubmit={this.handleNewCourseSubmit}>\n                        <InputField key={FIELDS[0].name}\n                            type={FIELDS[0].type} name={FIELDS[0].name} label={FIELDS[0].label}\n                            defaultValue={this.state.Course.title}\n                            errors={this.state.errors}\n                            onChange={this.handleInputChange} />\n                        <InputField key={FIELDS[1].name}\n                            type={FIELDS[1].type} name={FIELDS[1].name} label={FIELDS[1].label}\n                            defaultValue={this.props.authenticatedUsername} disabled={FIELDS[1].disabled}\n                            errors={this.state.errors}\n                            onChange={this.handleInputChange} />\n                        <div className=\"form-group\">\n                            <label>Body</label>\n                            <textarea\n                                name=\"body\" style={{height: '200px'}}\n                                className=\"form-control\" placeholder=\"Your Course's contents goes here... Good luck!\"\n                                onChange={this.handleInputChange}\n                                defaultValue={this.state.Course.body} />\n                            {this.state.errors.body !== '' && <ErrorMsg msg={this.state.errors.body} />}\n                        </div>\n                        <button className=\"btn btn-success\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.user.isAuthenticated,\n        authenticatedUsername: state.user.email\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNewCourse: (CourseData) => dispatch(addNewCourse(CourseData))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCourse);\n","import { configureStore } from '@reduxjs/toolkit'\nimport userSlice from './reducers/userSlice'\nimport courseSlice from './reducers/courseSlice'\nexport default configureStore({\n    reducer: {\n        user: userSlice,\n        course: courseSlice,\n    },\n})","import \"./App.css\";\nimport React from \"react\";\nimport Navbar from \"./components/navbar\";\nimport Create from \"./components/create\";\nimport Edit from './components/edit';\nimport CourseList from \"./components/courseList\";\n\nimport Home from './components/home';\nimport Signup from './components/signUp';\nimport Login from './components/login';\nimport SingleCourse from './components/singleCourse';\nimport AddCourse from './components/addCourse';\nimport EditCourse from './components/editCourse';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nconst App = () => {\n  return (\n    <Provider store = {store}>\n\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route\n            exact\n            path=\"/courses/add\"\n          >\n            <AddCourse/>\n          </Route>  \n          <Route\n            path=\"/courses/edit/:id\">\n            <EditCourse/>\n          </Route>\n          <Route\n            path=\"/courses/:id\"\n          >\n            <SingleCourse/>\n          </Route>\n          <Route path=\"/login\">\n            <Login/>\n          </Route>\n          <Route path=\"/signup\">\n            <Signup/>\n          </Route>\n          <Route path=\"/\">\n            <Home/>\n          </Route>\n          <Route path=\"/courses\">\n            <CourseList />\n          </Route>\n          <Route path=\"/create\">\n            <Create />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default\n    ReactDOM.render(\n      <NextApp />,\n      document.getElementById(\"root\")\n    )\n  })\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}